
Epoch: 0 Loss: 2.5944 Train_Acc: 0.1094 Val_Accuracy: 0.1042
Epoch: 1 Loss: 2.1701 Train_Acc: 0.1875 Val_Accuracy: 0.1209
Epoch: 2 Loss: 1.7315 Train_Acc: 0.4375 Val_Accuracy: 0.1362
Epoch: 3 Loss: 1.3954 Train_Acc: 0.6875 Val_Accuracy: 0.1709
Epoch: 4 Loss: 1.0233 Train_Acc: 0.8906 Val_Accuracy: 0.2111
Epoch: 5 Loss: 0.7965 Train_Acc: 0.9531 Val_Accuracy: 0.2384
Epoch: 6 Loss: 0.6072 Train_Acc: 0.9844 Val_Accuracy: 0.2750
Epoch: 7 Loss: 0.4609 Train_Acc: 1.0000 Val_Accuracy: 0.3078
Traceback (most recent call last):
  File "C:\Users\gizem\Documents\GitHub\noisy_fair\train_multi.py", line 493, in <module>
    main()
  File "C:\Users\gizem\Documents\GitHub\noisy_fair\train_multi.py", line 463, in main
    outputs = model(images)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\gizem\Documents\GitHub\noisy_fair\train_multi.py", line 188, in forward
    x = self.layer1(x)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\container.py", line 141, in forward
    input = module(input)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torchvision\models\resnet.py", line 94, in forward
    out = self.conv2(out)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\conv.py", line 447, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\nn\modules\conv.py", line 443, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
KeyboardInterrupt