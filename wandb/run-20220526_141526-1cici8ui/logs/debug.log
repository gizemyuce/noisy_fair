2022-05-26 14:15:26,555 INFO    MainThread:19984 [wandb_setup.py:_flush():75] Loading settings from C:\Users\gizem\.config\wandb\settings
2022-05-26 14:15:26,556 INFO    MainThread:19984 [wandb_setup.py:_flush():75] Loading settings from C:\Users\gizem\Documents\GitHub\noisy_fair\wandb\settings
2022-05-26 14:15:26,556 INFO    MainThread:19984 [wandb_setup.py:_flush():75] Loading settings from environment variables: {}
2022-05-26 14:15:26,557 INFO    MainThread:19984 [wandb_setup.py:_flush():75] Inferring run settings from compute environment: {'program_relpath': 'only_min_margin.py', 'program': 'c:\\Users\\gizem\\Documents\\GitHub\\noisy_fair\\only_min_margin.py'}
2022-05-26 14:15:26,557 INFO    MainThread:19984 [wandb_init.py:_log_setup():438] Logging user logs to C:\Users\gizem\Documents\GitHub\noisy_fair\wandb\run-20220526_141526-1cici8ui\logs\debug.log
2022-05-26 14:15:26,573 INFO    MainThread:19984 [wandb_init.py:_log_setup():439] Logging internal logs to C:\Users\gizem\Documents\GitHub\noisy_fair\wandb\run-20220526_141526-1cici8ui\logs\debug-internal.log
2022-05-26 14:15:26,574 INFO    MainThread:19984 [wandb_init.py:init():472] calling init triggers
2022-05-26 14:15:26,574 INFO    MainThread:19984 [wandb_init.py:init():475] wandb.init called with sweep_config: {}
config: {'n_train': 1000, 'n_test': 10000.0, 'n_features': 1000, 'tau': 1.0, 'SNR': 10, 'n_informative': 1000, 'n_redundant': 0, 'n_repeated': 0, 'n_useless': 0, 'n_clusters_per_class': 1, 'class_sep': 3.1622776601683795, 's': 1, 'label_noise_prob': 0}
2022-05-26 14:15:26,574 INFO    MainThread:19984 [wandb_init.py:init():525] starting backend
2022-05-26 14:15:26,574 INFO    MainThread:19984 [backend.py:_multiprocessing_setup():99] multiprocessing start_methods=spawn, using: spawn
2022-05-26 14:15:26,583 INFO    MainThread:19984 [backend.py:ensure_launched():219] starting backend process...
2022-05-26 14:15:26,735 INFO    MainThread:19984 [backend.py:ensure_launched():224] started backend process with pid: 9200
2022-05-26 14:15:26,736 INFO    MainThread:19984 [wandb_init.py:init():534] backend started and connected
2022-05-26 14:15:26,743 INFO    MainThread:19984 [wandb_init.py:init():598] updated telemetry
2022-05-26 14:15:26,818 INFO    MainThread:19984 [wandb_init.py:init():629] communicating run to backend with 30 second timeout
2022-05-26 14:15:31,243 INFO    MainThread:19984 [wandb_run.py:_on_init():1922] communicating current version
2022-05-26 14:15:32,097 INFO    MainThread:19984 [wandb_run.py:_on_init():1926] got version response upgrade_message: "wandb version 0.12.17 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2022-05-26 14:15:32,097 INFO    MainThread:19984 [wandb_init.py:init():660] starting run threads in backend
2022-05-26 14:15:33,762 WARNING MainThread:19984 [wandb_init.py:init():1017] interrupted
Traceback (most recent call last):
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\wandb_init.py", line 996, in init
    run = wi.init()
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\wandb_init.py", line 671, in init
    _ = backend.interface.communicate_run_start(run_obj)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\interface\interface.py", line 221, in communicate_run_start
    result = self._communicate_run_start(run_start)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\interface\interface_shared.py", line 439, in _communicate_run_start
    result = self._communicate(rec)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\interface\interface_shared.py", line 225, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\wandb\sdk\interface\router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\threading.py", line 600, in wait
    signaled = self._cond.wait(timeout)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\threading.py", line 324, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
