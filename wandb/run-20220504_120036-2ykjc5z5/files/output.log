torch.Size([10, 50])
torch.Size([50])
CMM train_err=0.0, err=39.6349983215332
torch.Size([10, 50])
torch.Size([10, 500])
w=1.0, train_err=0.0, err=41.47500228881836
====================l1=========================
CMM train_err=0.0, err=50.195003509521484
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 1.])
     con: array([], dtype=float64)
     fun: -0.8396215586817344
 message: 'Optimization terminated successfully.'
     nit: 7
   slack: array([-3.29056865e-10, -2.26803050e-10, -1.07260659e-10, -5.07270254e-10,
       -1.91986498e-10,  2.25959064e-10, -5.33557432e-10, -1.38664505e-10,
       -8.92268027e-11, -3.61004743e-10, -1.47482335e-10, -2.52761773e-10,
       -4.64301534e-10,  8.75279220e-11, -2.90832633e-10, -4.52071788e-10,
        5.28497464e-10, -9.68539579e-11, -4.75652217e-10, -2.49950308e-10,
       -2.51386256e-10,  9.65594626e-11,  1.57184462e-11, -4.08304161e-10,
       -5.71401509e-11, -4.05226897e-10,  1.70358261e-10, -2.96793290e-10,
       -1.13016143e-10, -4.93696290e-11,  8.15507910e-11, -2.96637596e-10,
       -4.38111630e-10, -5.24481421e-10, -4.18095261e-10, -3.40431255e-11,
       -4.79209483e-10,  1.70616808e-11, -1.31245754e-10, -4.21628993e-10,
       -3.56198217e-11,  5.45995274e-11, -2.13937139e-10, -1.07960060e-10,
       -6.03975980e-10, -3.31793283e-10,  1.18641704e-11, -6.12178641e-10,
        1.19979514e-10, -1.69315293e-10,  2.53109363e-01,  2.18442005e-09,
        1.63289834e-09,  4.21906632e-09,  2.07130177e-09,  1.29736864e-09,
        1.08583813e-09,  1.91933467e-09,  1.64200852e-09,  2.29685505e-09,
        1.77911677e-09,  2.02685479e-09,  3.31796549e-09,  1.46595405e-09,
        3.48247719e-09,  2.49332397e-09,  1.08926950e-09,  2.28282432e-09,
        9.30071961e-09,  2.50525000e-09,  2.01165366e-09,  1.43562329e-09,
        1.50357032e-09,  2.62469565e-09,  1.66420210e-09,  2.23664106e-09,
        1.36052233e-09,  2.38768493e-09,  1.84498208e-09,  1.68030553e-09,
        1.51242499e-09,  2.04229077e-09,  2.11775229e-09,  2.31805158e-09,
        1.91743069e-09,  1.64274154e-09,  9.84186761e-09,  1.73528162e-09,
        1.71806866e-09,  4.08043077e-09,  1.69935802e-09,  1.48126255e-09,
        2.83215757e-09,  1.67023740e-09,  9.41438317e-01,  4.83632373e-09,
        1.50148028e-09,  8.05452294e-01,  1.43633287e-09,  2.14013805e-09,
        1.53876773e+00,  1.28468161e+00,  7.45128497e-01,  1.39343799e+00,
        9.58363056e-10,  5.91479642e-01,  1.58594587e+00,  7.45131535e-01,
        1.14075338e-08,  5.11642864e-01, -3.87678971e-08])
  status: 0
 success: True
       x: array([1.26554682e-01, 1.20561155e-09, 8.70079498e-10, 2.36316828e-09,
       1.13164414e-09, 5.35704791e-10, 8.09697781e-10, 1.02899959e-09,
       8.65617662e-10, 1.32892990e-09, 9.63299553e-10, 1.13980828e-09,
       1.89113351e-09, 6.89213065e-10, 1.88665491e-09, 1.47269788e-09,
       2.80386018e-10, 1.18983914e-09, 4.88818591e-09, 1.37760015e-09,
       1.13151996e-09, 6.69531914e-10, 7.43925939e-10, 1.51649991e-09,
       8.60671124e-10, 1.32093398e-09, 5.95082036e-10, 1.34223911e-09,
       9.78999114e-10, 8.64837582e-10, 7.15437097e-10, 1.16946418e-09,
       1.27793196e-09, 1.42126650e-09, 1.16776298e-09, 8.38392331e-10,
       5.16053855e-09, 8.59109971e-10, 9.24657206e-10, 2.25102988e-09,
       8.67488920e-10, 7.13331510e-10, 1.52304735e-09, 8.89098730e-10,
       4.70719159e-01, 2.58405851e-09, 7.44808053e-10, 4.02726147e-01,
       6.58176679e-10, 1.15472667e-09, 1.26554681e-01, 9.78808502e-10,
       7.62818839e-10, 1.85589803e-09, 9.39657637e-10, 7.61663854e-10,
       2.76140350e-10, 8.90335082e-10, 7.76390859e-10, 9.67925153e-10,
       8.15817218e-10, 8.87046507e-10, 1.42683198e-09, 7.76740987e-10,
       1.59582228e-09, 1.02062609e-09, 8.08883483e-10, 1.09298518e-09,
       4.41253370e-09, 1.12764984e-09, 8.80133700e-10, 7.66091377e-10,
       7.59644385e-10, 1.10819574e-09, 8.03530973e-10, 9.15707082e-10,
       7.65440296e-10, 1.04544582e-09, 8.65982971e-10, 8.15467953e-10,
       7.96987888e-10, 8.72826589e-10, 8.39820328e-10, 8.96785081e-10,
       7.49667716e-10, 8.04349205e-10, 4.68132906e-09, 8.76171652e-10,
       7.93411453e-10, 1.82940089e-09, 8.31869098e-10, 7.67931038e-10,
       1.30911022e-09, 7.81138670e-10, 4.70719158e-01, 2.25226522e-09,
       7.56672224e-10, 4.02726147e-01, 7.78156193e-10, 9.85411379e-10])
(100,)
<built-in method size of Tensor object at 0x00000243CF71EA70>
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_interp.py", line 564, in <module>
    margin_classifiers_perf(d=50,n=10,approx_tau=1, SNR=10, n_test=1e4, s=1, l1=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_interp.py", line 271, in margin_classifiers_perf
    err_train_l1 = test_error(torch.squeeze(w), xs, ys)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_interp.py", line 39, in test_error
    pred = x_test @ w
RuntimeError: size mismatch, got 10, 10x50,100