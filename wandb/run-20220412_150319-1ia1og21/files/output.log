tensor([ 0.0315, -0.0032,  0.0020,  ...,  0.0042,  0.0015,  0.0014])
CMM train_err=0.0, err=45.279998779296875
1.139041781425476
1.0830186605453491
1.0323127508163452
0.9865129590034485
0.9452405571937561
0.9081441760063171
0.8748910427093506
0.8451695442199707
0.8186889886856079
0.7951724529266357
0.7743663787841797
0.7560244798660278
0.7399188280105591
0.7258358001708984
0.7135725021362305
0.7029415369033813
0.6937668919563293
0.6858853697776794
0.6791467666625977
0.6734116673469543
0.6685530543327332
0.6644554138183594
0.6610167026519775
0.6581428050994873
0.6557513475418091
0.6537699699401855
0.652134120464325
0.6507896780967712
0.6496881246566772
0.6487891674041748
0.64805668592453
0.6474625468254089
0.6469815373420715
0.6465940475463867
0.6462811827659607
0.6460298299789429
0.6458285450935364
0.6456670761108398
0.6455380916595459
0.6454355716705322
0.6453527808189392
0.6452875137329102
0.6452357172966003
0.6451946496963501
0.6451614499092102
0.6451351642608643
0.6451151371002197
0.6450982093811035
0.6450852155685425
0.6450751423835754
0.645067036151886
0.645060122013092
0.6450551152229309
0.6450505256652832
0.645047664642334
0.6450455188751221
0.6450433135032654
0.6450419425964355
0.6450400948524475
0.6450393795967102
0.6450384855270386
0.6450378894805908
0.6450377106666565
0.6450369358062744
0.6450369358062744
0.6450363397598267
0.6450362801551819
0.6450357437133789
0.6450359225273132
0.6450361013412476
0.6450358629226685
0.6450361013412476
0.6450360417366028
0.6450357437133789
0.6450356841087341
0.6450357437133789
tensor([ 0.0728, -0.0072,  0.0045,  ...,  0.0103,  0.0023,  0.0036],
       requires_grad=True)
w=1.0, train_err=0.0, err=45.22999954223633
====================l1=========================
CMM train_err=0.0, err=6.62000036239624
3.6878304481506348
3.673676013946533
3.679630756378174
3.673170804977417
3.6905829906463623
3.6722421646118164
3.6830573081970215
3.6732959747314453
3.676980495452881
3.6859021186828613
3.6877663135528564
3.6874003410339355
3.6752548217773438
3.6841142177581787
3.67850661277771
3.678218364715576
3.684424638748169
3.6814117431640625
3.6657514572143555
3.6954843997955322
3.6846349239349365
3.6882877349853516
3.6870861053466797
3.679323673248291
3.681974411010742
3.685098648071289
3.6991324424743652
3.6817522048950195
3.6772356033325195
3.682159900665283
3.6838884353637695
3.680854320526123
3.6794118881225586
3.6774864196777344
3.6795711517333984
3.6887454986572266
3.6838645935058594
3.664773941040039
3.6918039321899414
3.680180549621582
3.6876072883605957
3.6862759590148926
3.6734683513641357
3.6748275756835938
3.6800365447998047
3.6848678588867188
3.6737847328186035
3.679056167602539
3.679668426513672
3.6661829948425293
3.6805660724639893
3.6768639087677
3.6826422214508057
3.6825480461120605
3.6839466094970703
3.685410737991333
3.6783456802368164
3.681116819381714
3.6710386276245117
3.672877311706543
3.6713576316833496
3.6858553886413574
3.680262565612793
3.6840767860412598
3.688338279724121
3.677286148071289
3.681452989578247
3.670067310333252
3.6764512062072754
3.6850743293762207
3.69193696975708
3.6795549392700195
3.6922218799591064
3.701059341430664
3.6775801181793213
3.67883563041687
3.6841847896575928
3.6970324516296387
3.6718292236328125
3.684727668762207
3.6781039237976074
3.682699680328369
3.6838126182556152
3.683131456375122
3.6789889335632324
3.6824193000793457
3.6873769760131836
3.6826558113098145
3.67708683013916
3.6798148155212402
3.677090644836426
3.6842150688171387
3.6904492378234863
3.679811954498291
3.677942991256714
3.6823267936706543
3.6773037910461426
3.6750316619873047
3.6745710372924805
3.6842496395111084
3.6895837783813477
3.679263114929199
3.690335273742676
3.6865830421447754
3.6751742362976074
3.6754565238952637
3.682014226913452
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 434, in <module>
    margin_classifiers_perf(d=5000,n=200,approx_tau=1, SNR=10, n_test=1e4, s=1, l1=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 295, in margin_classifiers_perf
    l = loss_average_poly(w, b, z1s, z2s, n1, n2) + torch.norm(w, p=1)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 26, in loss_average_poly
    return (torch.sum(1./(z1s @ v)) + b * torch.sum(1./(z2s @ v))) /(n1+b*n2)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\torch\_tensor.py", line 31, in wrapped
    return f(*args, **kwargs)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\torch\_tensor.py", line 610, in __rdiv__
    return self.reciprocal() * other
KeyboardInterrupt