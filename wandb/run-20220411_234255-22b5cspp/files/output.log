tensor([ 0.0319, -0.0020,  0.0004,  ..., -0.0045,  0.0050,  0.0034])
CMM train_err=0.0, err=44.70000076293945
1447183.75
649951.0
291900.71875
131096.453125
58877.1484375
26442.517578125
11875.7060546875
5333.54248046875
2395.374755859375
1075.7974853515625
1524570.75
684705.125
307509.375
150463.46875
67574.9765625
30348.83984375
13630.048828125
6121.44580078125
2749.21630859375
1234.735107421875
554.5665283203125
249.096923828125
111.92350006103516
533.1301879882812
852.4147338867188
382.9766845703125
172.0098419189453
77.55143737792969
35.01466369628906
16.212039947509766
17901.921875
8040.01171875
3610.894775390625
1621.7144775390625
728.3529663085938
327.1896057128906
147.00115966796875
66.1480941772461
29.848644256591797
24.509397506713867
11.23061752319336
5.793608665466309
11.724688529968262
5.762029647827148
3.1235740184783936
1.7367029190063477
1.1144237518310547
0.8423470258712769
0.725275993347168
0.6767114400863647
0.6581226587295532
0.6521419882774353
0.6506953835487366
0.6504353284835815
0.650396466255188
0.6503912210464478
0.6503905057907104
0.6503902077674866
0.6503898501396179
tensor([ 0.0729, -0.0050,  0.0013,  ..., -0.0101,  0.0110,  0.0084],
       requires_grad=True)
w=1.0, train_err=0.0, err=44.59000015258789
====================l1=========================
CMM train_err=0.0, err=6.454999923706055
2487.375
2908.639404296875
1160292.75
1112069.125
1065289.125
1019901.0625
975949.0625
933341.125
892015.0
851899.9375
812987.625
775202.75
738773.625
703545.4375
669603.25
636846.4375
605355.0625
575102.875
546107.3125
518256.96875
491474.15625
467244.375
441529.9375
417921.21875
395285.40625
373587.40625
352709.46875
332750.3125
313716.5625
295510.625
278237.53125
261777.59375
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 426, in <module>
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 288, in margin_classifiers_perf
    optim.zero_grad()
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_no_imb.py", line 26, in loss_average_poly
    return (torch.sum(1./(z1s @ v)) + b * torch.sum(1./(z2s @ v))) /(n1+b*n2)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\torch\_tensor.py", line 26, in wrapped
    @functools.wraps(f, assigned=assigned)
KeyboardInterrupt