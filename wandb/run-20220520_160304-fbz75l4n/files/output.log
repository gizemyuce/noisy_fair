CMM train_err=0.0, err=0.0
===============================================================================
                                     CVXPY
                                     v1.2.0
===============================================================================
(CVXPY) May 20 04:03:15 PM: Your problem has 1000 variables, 2 constraints, and 0 parameters.
(CVXPY) May 20 04:03:17 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) May 20 04:03:17 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) May 20 04:03:17 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
-------------------------------------------------------------------------------
                                  Compilation
-------------------------------------------------------------------------------
(CVXPY) May 20 04:03:17 PM: Compiling problem (target solver=ECOS).
(CVXPY) May 20 04:03:17 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> ECOS
(CVXPY) May 20 04:03:17 PM: Applying reduction Dcp2Cone
(CVXPY) May 20 04:03:20 PM: Applying reduction CvxAttr2Constr
(CVXPY) May 20 04:03:20 PM: Applying reduction ConeMatrixStuffing
(CVXPY) May 20 04:03:20 PM: Applying reduction ECOS
(CVXPY) May 20 04:03:20 PM: Finished problem compilation (took 3.296e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver
-------------------------------------------------------------------------------
(CVXPY) May 20 04:03:20 PM: Invoking solver ECOS  to obtain a solution.
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\mixture_outlier.py", line 675, in <module>
    margin_classifiers_perf(d=1000,n=100,approx_tau=1, SNR=10, n_test=1e4, s=1, random_flip_prob=0, mixture=True, l2=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\mixture_outlier.py", line 286, in margin_classifiers_perf
    result = prob.solve(verbose=True)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\cvxpy\problems\problem.py", line 481, in solve
    return solve_func(self, *args, **kwargs)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\cvxpy\problems\problem.py", line 1016, in _solve
    self.unpack_results(solution, solving_chain, inverse_data)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\cvxpy\problems\problem.py", line 1341, in unpack_results
    raise error.SolverError(
cvxpy.error.SolverError: Solver 'ECOS' failed. Try another solver, or solve with verbose=True for more information.