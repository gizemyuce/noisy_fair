torch.Size([100, 5000])
torch.Size([5000])
CMM train_err=0.0, err=45.55500030517578
torch.Size([100, 5000])
torch.Size([100, 500000])
w=1.0, train_err=0.0, err=45.584999084472656
====================l1=========================
CMM train_err=0.0, err=49.810001373291016
<built-in method size of Tensor object at 0x00000278A7A3A7A0>
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_interp.py", line 553, in <module>
    margin_classifiers_perf(d=5000,n=100,approx_tau=1, SNR=10, n_test=1e4, s=1, l1=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin_interp.py", line 257, in margin_classifiers_perf
    res = linprog (-torch.cat([z_mean,torch.zeros_like(z_mean) ], dim=0), A_ub=A_ub)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\scipy\optimize\_linprog.py", line 607, in linprog
    lp, solver_options = _parse_linprog(lp, options, meth)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\scipy\optimize\_linprog_util.py", line 1003, in _parse_linprog
    lp = _clean_inputs(lp._replace(A_ub=A_ub, A_eq=A_eq))
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\scipy\optimize\_linprog_util.py", line 316, in _clean_inputs
    raise ValueError(
ValueError: Invalid input for linprog: b_ub must be a 1-D array; b_ub must not have more than one non-singleton dimension and the number of rows in A_ub must equal the number of values in b_ub