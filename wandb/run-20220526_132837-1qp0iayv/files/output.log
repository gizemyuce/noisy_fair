===============================================================================
                                     CVXPY
                                     v1.2.0
===============================================================================
(CVXPY) May 26 01:28:43 PM: Your problem has 1000 variables, 1 constraints, and 0 parameters.
(CVXPY) May 26 01:28:43 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) May 26 01:28:43 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) May 26 01:28:43 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
-------------------------------------------------------------------------------
                                  Compilation
-------------------------------------------------------------------------------
(CVXPY) May 26 01:28:43 PM: Compiling problem (target solver=SCS).
(CVXPY) May 26 01:28:43 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> SCS
(CVXPY) May 26 01:28:43 PM: Applying reduction Dcp2Cone
(CVXPY) May 26 01:28:43 PM: Applying reduction CvxAttr2Constr
(CVXPY) May 26 01:28:43 PM: Applying reduction ConeMatrixStuffing
(CVXPY) May 26 01:28:44 PM: Applying reduction SCS
(CVXPY) May 26 01:28:44 PM: Finished problem compilation (took 6.031e-01 seconds).
-------------------------------------------------------------------------------
                                Numerical solver
-------------------------------------------------------------------------------
(CVXPY) May 26 01:28:44 PM: Invoking solver SCS  to obtain a solution.
------------------------------------------------------------------
	       SCS v3.2.0 - Splitting Conic Solver
	(c) Brendan O'Donoghue, Stanford University, 2012
------------------------------------------------------------------
problem:  variables n: 1001, constraints m: 2001
cones: 	  l: linear vars: 1000
	  q: soc vars: 1001, qsize: 1
settings: eps_abs: 1.0e-05, eps_rel: 1.0e-05, eps_infeas: 1.0e-07
	  alpha: 1.50, scale: 1.00e-01, adaptive_scale: 1
	  max_iters: 100000, normalize: 1, rho_x: 1.00e-06
	  acceleration_lookback: 10, acceleration_interval: 10
lin-sys:  sparse-direct
	  nnz(A): 501001, nnz(P): 0
------------------------------------------------------------------
 iter | pri res | dua res |   gap   |   obj   |  scale  | time (s)
------------------------------------------------------------------
     0| 1.16e+01  1.00e+00  1.12e+02  4.43e+01  1.00e-01  4.01e-02
    25| 5.99e+12  9.36e+00  3.84e+20  2.42e+20  1.00e-01  1.47e-01
------------------------------------------------------------------
status:  infeasible
timings: total: 1.04e+00s = setup: 8.90e-01s + solve: 1.48e-01s
	 lin-sys: 1.22e-01s, cones: 3.45e-04s, accel: 3.50e-05s
------------------------------------------------------------------
objective = inf
------------------------------------------------------------------
-------------------------------------------------------------------------------
                                    Summary
-------------------------------------------------------------------------------
(CVXPY) May 26 01:28:45 PM: Problem status: infeasible
(CVXPY) May 26 01:28:45 PM: Optimal value: inf
(CVXPY) May 26 01:28:45 PM: Compilation took 6.031e-01 seconds
(CVXPY) May 26 01:28:45 PM: Solver (including time spent in interface) took 1.076e+00 seconds
None
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\only_min_margin.py", line 546, in <module>
    aspect_ratio_l1(d=1000, n=100, change_d=False, n_runs=2, s=1, l2=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\only_min_margin.py", line 305, in aspect_ratio_l1
    err_mm, err_train_mm, err_mm_l1, err_train_mm_l1,  wmm_l2, wmm_l1 = margin_classifiers_perf(d=d,n=n,approx_tau=1, SNR=10, n_test=1e4, s=s, l1=True, random_flip_prob=sigma, l2=l2)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\only_min_margin.py", line 201, in margin_classifiers_perf
    err_train_mm = test_error(wmm, xs,ys)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\only_min_margin.py", line 43, in test_error
    w = w / torch.norm(w)
  File "C:\Users\gizem\anaconda3\envs\soccer2\lib\site-packages\torch\functional.py", line 1537, in norm
    ndim = input.dim()
AttributeError: 'Variable' object has no attribute 'dim'