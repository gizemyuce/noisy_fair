tensor([ 0.0309,  0.0054, -0.0015,  ...,  0.0015, -0.0027,  0.0019])
CMM train_err=0.0, err=45.32500076293945
601.1373901367188
2005.033447265625
1614.97900390625
319.42730712890625
11241.130859375
1711.4263916015625
82507.1875
177.4039764404297
372.78448486328125
6646.75244140625
7025842.5
11103.8251953125
216.25523376464844
2936840.0
735.44775390625
155.11534118652344
1103564.125
1365.4281005859375
218.231689453125
845120.75
10072.46875
239655.75
6806.53369140625
184.6671905517578
100879.9375
Traceback (most recent call last):
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin.py", line 427, in <module>
    margin_classifiers_perf(d=5000,n=200,approx_tau=1, SNR=10, n_test=1e4, s=1, l1=True)
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin.py", line 218, in margin_classifiers_perf
    l = loss_average_poly(w, b, z1s, z2s, n1, n2) + torch.norm(w)**2
  File "c:\Users\gizem\Documents\GitHub\noisy_fair\margin.py", line 26, in loss_average_poly
    return (torch.sum(1./(z1s @ v)) + b * torch.sum(1./(z2s @ v))) /(n1+b*n2)
  File "C:\Users\gizem\anaconda3\envs\iw\lib\site-packages\torch\_tensor.py", line 26, in wrapped
    @functools.wraps(f, assigned=assigned)
KeyboardInterrupt